// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var hordeUdpMessageStreamAnalytics = HordeUdpMessageStreamAnalytics.FromJson(jsonString);

namespace OccupancyIotaPublisherFunctionApp.Dto
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class HordeUdpMessageStreamAnalytics
    {
        [JsonProperty("DeviceName")]
        public string DeviceName { get; set; }

        [JsonProperty("DeviceId")]
        public string DeviceId { get; set; }

        [JsonProperty("Received")]
        public DateTimeOffset Received { get; set; }

        [JsonProperty("PayloadInt")]
        public long PayloadInt { get; set; }
    }

    public partial class HordeUdpMessageStreamAnalytics
    {
        public static List<HordeUdpMessageStreamAnalytics> FromJson(string json) => JsonConvert.DeserializeObject<List<HordeUdpMessageStreamAnalytics>>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<HordeUdpMessageStreamAnalytics> self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}